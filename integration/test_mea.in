(SIMULATE-MODEL :model "xyz")
(FAILURE :reason INVALID_MODEL)
(SIMULATE-MODEL :model "# exported from PySB model 'None'\\n\\nfrom pysb import Model, Monomer, Parameter, Expression, Compartment, Rule, Observable, Initial, Annotation, ANY, WILD\\n\\nModel()\\n\\nMonomer(u'RAF1', ['act'], {'act': ['inactive', 'active']})\\nMonomer(u'KRAS', ['act'], {'act': ['inactive', 'active']})\\n\\nParameter(u'kf_kr_act_1', 1e-06)\\nParameter(u'RAF1_0', 100.0)\\nParameter(u'KRAS_0', 100.0)\\n\\n\\n\\n\\n\\nRule(u'KRAS_act_activates_RAF1_act', KRAS(act='active') + RAF1(act='inactive') >> KRAS(act='active') + RAF1(act='active'), kf_kr_act_1)\\n\\nInitial(RAF1(act='inactive'), RAF1_0)\\nInitial(KRAS(act='inactive'), KRAS_0)")
(FAILURE :reason MISSING_PARAMETER)
(SIMULATE-MODEL :target_entity (RAF1) :target_pattern ACTIVE :model "# exported from PySB model 'None'\\n\\nfrom pysb import Model, Monomer, Parameter, Expression, Compartment, Rule, Observable, Initial, Annotation, ANY, WILD\\n\\nModel()\\n\\nMonomer('RAF1', ['act'], {'act': ['inactive', 'active']})\\nMonomer('KRAS', ['act'], {'act': ['inactive', 'active']})\\n\\nParameter('kf_kr_act_1', 1e-06)\\nParameter('RAF1_0', 100.0)\\nParameter('KRAS_0', 100.0)\\n\\n\\nRule('KRAS_act_activates_RAF1_act', KRAS(act='active') + RAF1(act='inactive') >> KRAS(act='active') + RAF1(act='active'), kf_kr_act_1)\\n\\nInitial(RAF1(act='inactive'), RAF1_0)\\nInitial(KRAS(act='inactive'), KRAS_0)")
(SUCCESS :content (:target_match TRUE))
(SIMULATE-MODEL :target_entity (BRAF) :target_pattern INACTIVE :condition_entity (VEMURAFENIB) :condition_type ADD :model "# exported from PySB model 'None'\\n\\nfrom pysb import Model, Monomer, Parameter, Expression, Compartment, Rule, Observable, Initial, Annotation, ANY, WILD\\n\\nModel()\\n\\nMonomer('VEMURAFENIB')\\nMonomer('BRAF', ['act'], {'act': ['inactive', 'active']})\\nMonomer('KRAS', ['act'], {'act': ['inactive', 'active']})\\n\\nParameter('kf_kb_act_1', 1e-06)\\nParameter('kf_vb_act_1', 1e-06)\\nParameter('VEMURAFENIB_0', 100.0)\\nParameter('BRAF_0', 100.0)\\nParameter('KRAS_0', 100.0)\\n\\nRule('KRAS_Activity_activates_BRAF_Activity', KRAS(act='active') + BRAF(act='inactive') >> KRAS(act='active') + BRAF(act='active'), kf_kb_act_1)\\nRule('VEMURAFENIB_None_activates_BRAF_Activity', VEMURAFENIB() + BRAF(act='active') >> VEMURAFENIB() + BRAF(act='inactive'), kf_vb_act_1)\\n\\nInitial(VEMURAFENIB(), VEMURAFENIB_0)\\nInitial(BRAF(act='inactive'), BRAF_0)\\nInitial(KRAS(act='inactive'), KRAS_0)")
(SUCCESS :content (:target_match TRUE))
